{"file":"/Users/derk/jsProjects/sourcerer/js/core.ts","mappings":";;AAAA,qCAAiD;AAYjD,WAAW;AACE,QAAA,gBAAgB,GAAG,UAC9B,UAAyE,EACzE,QAA6D;IAE7D,OAAO,iBAAO,CAAC,kBAAkB,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC,CAAC;AACW,QAAA,yBAAyB,GAAG,UACvC,UAAkF,EAClF,QAA6D;IAE7D,OAAO,iBAAO,CAAC,2BAA2B,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AACpE,CAAC,CAAC","names":[],"sources":["/Users/derk/jsProjects/sourcerer/js/core.ts"],"sourcesContent":["import { ElementNode, element } from './element';\nimport { LayoutParamAttributes } from './layoutparams';\nimport { MainTypes } from \"./main\";\n// types\n/* generated @ 2018-11-12T14:27:21.299 */\nexport namespace CoreTypes {\n  export interface ContentLoadingProgressBarAttributes extends MainTypes.ProgressBarAttributes {\n  }\n  export interface NestedScrollViewAttributes extends MainTypes.FrameLayoutAttributes {\n    fillViewport?: boolean;\n  }\n}\n// elements\nexport const NestedScrollView = (\n  attributes?: CoreTypes.NestedScrollViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<CoreTypes.NestedScrollViewAttributes, LayoutParamAttributes> => {\n  return element('nestedScrollView', attributes, children);\n};\nexport const ContentLoadingProgressBar = (\n  attributes?: CoreTypes.ContentLoadingProgressBarAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<CoreTypes.ContentLoadingProgressBarAttributes, LayoutParamAttributes> => {\n  return element('contentLoadingProgressBar', attributes, children);\n};"],"version":3}