{"file":"/Users/derk/jsProjects/sourcerer/js/__test__/element.test.ts","mappings":"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","names":[],"sources":["/Users/derk/jsProjects/sourcerer/js/__test__/element.test.ts"],"sourcesContent":["import {\n  DrawerLayout,\n  DrawerlayoutTypes,\n} from '../drawerlayout';\nimport { ViewBase } from '../element';\nimport { CoordinatorLayout, CoordinatorlayoutTypes } from '../coordinatorlayout';\nimport { AppBarLayout, NavigationView, ComponentsMaterialTypes } from '../componentsmaterial';\nimport { AppcompatToolbar, AppcompatTypes } from '../appcompat';\nimport { NestedScrollView } from '../core';\nimport { LinearLayout, MainTypes } from '../main';\n\ndescribe('testing element', () => {\n  test('single option is set', () => {\n      const layout = DrawerLayout({ colorPrimaryDark: 'white'}).build();\n      const drawerLayout = layout.map.drawerLayout as ViewBase<DrawerlayoutTypes.DrawerLayoutAttributes, {}>;\n      expect(drawerLayout.attributes.colorPrimaryDark).toEqual('white');\n  });\n  test('single child is set', () => {\n    const layout = DrawerLayout(\n      {},\n      [CoordinatorLayout({ id: 'test' })]\n    ).build();\n    const drawerLayout = layout.map.drawerLayout as ViewBase<DrawerlayoutTypes.DrawerLayoutAttributes, {}>;\n    expect(drawerLayout).toHaveProperty(\"children\")\n    const children = drawerLayout.children as String[]\n    expect(children[0]).toEqual('drawerLayout_coordinatorLayout');\n    const coordinatorLayout = layout.map.drawerLayout_coordinatorLayout as ViewBase<CoordinatorlayoutTypes.CoordinatorLayoutAttributes, {}>;\n    expect(coordinatorLayout.attributes.id).toEqual('test');\n  });\n  test('single child and option is set', () => {\n    const layout = DrawerLayout(\n      { id: 'noot' },\n      [CoordinatorLayout()],\n    ).build();\n    const drawerLayout = layout.map.drawerLayout as ViewBase<DrawerlayoutTypes.DrawerLayoutAttributes, {}>;\n    expect(drawerLayout).toHaveProperty(\"children\")\n    const children = drawerLayout.children as String[]\n    expect(children[0]).toEqual('drawerLayout_coordinatorLayout');\n    expect(drawerLayout.attributes.id).toEqual('noot');\n  });\n  test('drawer with navigation layout', () => {\n    const layout = DrawerLayout(\n      { layout_width: \"match_parent\", layout_height: \"match_parent\"}, \n      [\n        CoordinatorLayout(\n          { background: \"#FEFEFE\" },\n          [\n            AppBarLayout(\n              { layout_height: \"290dp\" },\n              [          \n                AppcompatToolbar({ title: 'Navigation Playground' }),\n              ]\n            ),\n            NestedScrollView(\n              {},\n              [LinearLayout({ orientation: MainTypes.OrientationEnum.vertical })]\n            ),\n          ]\n        ),\n        NavigationView(\n          { \n            layout_gravity: [ \n              DrawerlayoutTypes.LayoutGravityFlagsEnum.start,\n              DrawerlayoutTypes.LayoutGravityFlagsEnum.left\n            ]\n          }\n        ),\n      ]).build();\n    const appBarLayout = layout.map.drawerLayout_coordinatorLayout_appBarLayout as ViewBase<ComponentsMaterialTypes.AppBarLayoutAttributes, MainTypes.ViewGroupLayoutParamsAttributes>;\n    expect(appBarLayout.attributes.layout_height).toEqual(true);\n    expect(appBarLayout).toHaveProperty(\"children\")\n\n    const nestedScrollView = layout.map.drawerLayout_coordinatorLayout_nestedScrollView as ViewBase<ComponentsMaterialTypes.AppBarLayoutAttributes, MainTypes.ViewGroupLayoutParamsAttributes>;\n    const children = nestedScrollView.children as String[]\n    expect(children[0]).toEqual('drawerLayout_coordinatorLayout_nestedScrollView_linearLayout');\n\n    const navigationView = layout.map.drawerLayout_navigationView as ViewBase<ComponentsMaterialTypes.NavigationViewAttributes, DrawerlayoutTypes.DrawerLayoutLayoutParamsAttributes>\n    expect(navigationView.attributes.layout_gravity).toEqual(['start', 'left']);\n  });\n  test('converts to json array', () => {\n    const layout = DrawerLayout(\n      { layout_width: \"match_parent\", layout_height: \"match_parent\"}, \n      [\n        CoordinatorLayout(\n          { background: \"#FEFEFE\" },\n          [\n            AppBarLayout(\n              { layout_height: \"290dp\" },\n              [          \n                AppcompatToolbar({ title: 'Navigation Playground' }),\n              ]\n            ),\n            NestedScrollView(\n              {},\n              [LinearLayout({ orientation: MainTypes.OrientationEnum.vertical })]\n            ),\n          ]\n        ),\n        NavigationView(\n          { \n            layout_gravity: [ \n              DrawerlayoutTypes.LayoutGravityFlagsEnum.start,\n              DrawerlayoutTypes.LayoutGravityFlagsEnum.left\n            ]\n          }\n        ),\n      ]).build();\n    //console.log(layout.toJson());\n    expect(layout.toJson()).toEqual(jsonOutput);\n  });\n});\n\n// tslint:disable-next-line:max-line-length\nconst jsonOutput = '[{\"id\":\"drawerLayout\",\"type\":\"drawerLayout\",\"attributes\":{\"layout_width\":\"match_parent\",\"layout_height\":\"match_parent\"},\"children\":[\"drawerLayout_coordinatorLayout\",\"drawerLayout_navigationView\"]},{\"id\":\"drawerLayout_coordinatorLayout\",\"type\":\"coordinatorLayout\",\"attributes\":{\"background\":\"#FEFEFE\"},\"children\":[\"drawerLayout_coordinatorLayout_appBarLayout\",\"drawerLayout_coordinatorLayout_nestedScrollView\"]},{\"id\":\"drawerLayout_coordinatorLayout_appBarLayout\",\"type\":\"appBarLayout\",\"attributes\":{\"layout_height\":\"290dp\"},\"children\":[\"drawerLayout_coordinatorLayout_appBarLayout_appcompat.toolbar\"]},{\"id\":\"drawerLayout_coordinatorLayout_appBarLayout_appcompat.toolbar\",\"type\":\"appcompat.toolbar\",\"attributes\":{\"title\":\"Navigation Playground\"},\"children\":[]},{\"id\":\"drawerLayout_coordinatorLayout_nestedScrollView\",\"type\":\"nestedScrollView\",\"attributes\":{},\"children\":[\"drawerLayout_coordinatorLayout_nestedScrollView_linearLayout\"]},{\"id\":\"drawerLayout_coordinatorLayout_nestedScrollView_linearLayout\",\"type\":\"linearLayout\",\"attributes\":{\"orientation\":1},\"children\":[]},{\"id\":\"drawerLayout_navigationView\",\"type\":\"navigationView\",\"attributes\":{\"layout_gravity\":[12,2]},\"children\":[]}]';\n"],"version":3}