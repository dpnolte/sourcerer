4812a7e9668e3821757e1e08b211df8b
"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var element_1 = require("./element");
// types
/* generated @ 2018-11-12T11:47:41.142 */
var DrawerlayoutTypes;
(function (DrawerlayoutTypes) {
    var LayoutGravityFlagsEnum;
    (function (LayoutGravityFlagsEnum) {
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["top"] = 0] = "top";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["bottom"] = 1] = "bottom";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["left"] = 2] = "left";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["right"] = 3] = "right";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["center_vertical"] = 4] = "center_vertical";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["fill_vertical"] = 5] = "fill_vertical";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["center_horizontal"] = 6] = "center_horizontal";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["fill_horizontal"] = 7] = "fill_horizontal";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["center"] = 8] = "center";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["fill"] = 9] = "fill";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["clip_vertical"] = 10] = "clip_vertical";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["clip_horizontal"] = 11] = "clip_horizontal";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["start"] = 12] = "start";
        LayoutGravityFlagsEnum[LayoutGravityFlagsEnum["end"] = 13] = "end";
    })(LayoutGravityFlagsEnum = DrawerlayoutTypes.LayoutGravityFlagsEnum || (DrawerlayoutTypes.LayoutGravityFlagsEnum = {}));
})(DrawerlayoutTypes = exports.DrawerlayoutTypes || (exports.DrawerlayoutTypes = {}));
// elements
exports.DrawerLayout = function (attributes, children) {
    return element_1.element('drawerLayout', attributes, children);
};
//# sourceMappingURL=drawerlayout.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyYXdlcmxheW91dC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVsZW1lbnRfMSIsInJlcXVpcmUiLCJEcmF3ZXJsYXlvdXRUeXBlcyIsIkxheW91dEdyYXZpdHlGbGFnc0VudW0iLCJEcmF3ZXJMYXlvdXQiLCJhdHRyaWJ1dGVzIiwiY2hpbGRyZW4iLCJlbGVtZW50Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkMsRUFBRUMsT0FBTyxJQUFULEVBQTdDO0FBQ0EsSUFBSUMsWUFBWUMsUUFBUSxXQUFSLENBQWhCO0FBQ0E7QUFDQTtBQUNBLElBQUlDLGlCQUFKO0FBQ0EsQ0FBQyxVQUFVQSxpQkFBVixFQUE2QjtBQUMxQixRQUFJQyxzQkFBSjtBQUNBLEtBQUMsVUFBVUEsc0JBQVYsRUFBa0M7QUFDL0JBLCtCQUF1QkEsdUJBQXVCLEtBQXZCLElBQWdDLENBQXZELElBQTRELEtBQTVEO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLFFBQXZCLElBQW1DLENBQTFELElBQStELFFBQS9EO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLE1BQXZCLElBQWlDLENBQXhELElBQTZELE1BQTdEO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLE9BQXZCLElBQWtDLENBQXpELElBQThELE9BQTlEO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLGlCQUF2QixJQUE0QyxDQUFuRSxJQUF3RSxpQkFBeEU7QUFDQUEsK0JBQXVCQSx1QkFBdUIsZUFBdkIsSUFBMEMsQ0FBakUsSUFBc0UsZUFBdEU7QUFDQUEsK0JBQXVCQSx1QkFBdUIsbUJBQXZCLElBQThDLENBQXJFLElBQTBFLG1CQUExRTtBQUNBQSwrQkFBdUJBLHVCQUF1QixpQkFBdkIsSUFBNEMsQ0FBbkUsSUFBd0UsaUJBQXhFO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLFFBQXZCLElBQW1DLENBQTFELElBQStELFFBQS9EO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLE1BQXZCLElBQWlDLENBQXhELElBQTZELE1BQTdEO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLGVBQXZCLElBQTBDLEVBQWpFLElBQXVFLGVBQXZFO0FBQ0FBLCtCQUF1QkEsdUJBQXVCLGlCQUF2QixJQUE0QyxFQUFuRSxJQUF5RSxpQkFBekU7QUFDQUEsK0JBQXVCQSx1QkFBdUIsT0FBdkIsSUFBa0MsRUFBekQsSUFBK0QsT0FBL0Q7QUFDQUEsK0JBQXVCQSx1QkFBdUIsS0FBdkIsSUFBZ0MsRUFBdkQsSUFBNkQsS0FBN0Q7QUFDSCxLQWZELEVBZUdBLHlCQUF5QkQsa0JBQWtCQyxzQkFBbEIsS0FBNkNELGtCQUFrQkMsc0JBQWxCLEdBQTJDLEVBQXhGLENBZjVCO0FBZ0JILENBbEJELEVBa0JHRCxvQkFBb0JKLFFBQVFJLGlCQUFSLEtBQThCSixRQUFRSSxpQkFBUixHQUE0QixFQUExRCxDQWxCdkI7QUFtQkE7QUFDQUosUUFBUU0sWUFBUixHQUF1QixVQUFVQyxVQUFWLEVBQXNCQyxRQUF0QixFQUFnQztBQUNuRCxXQUFPTixVQUFVTyxPQUFWLENBQWtCLGNBQWxCLEVBQWtDRixVQUFsQyxFQUE4Q0MsUUFBOUMsQ0FBUDtBQUNILENBRkQ7QUFHQSIsImZpbGUiOiJkcmF3ZXJsYXlvdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBlbGVtZW50XzEgPSByZXF1aXJlKFwiLi9lbGVtZW50XCIpO1xuLy8gdHlwZXNcbi8qIGdlbmVyYXRlZCBAIDIwMTgtMTEtMTJUMTE6NDc6NDEuMTQyICovXG52YXIgRHJhd2VybGF5b3V0VHlwZXM7XG4oZnVuY3Rpb24gKERyYXdlcmxheW91dFR5cGVzKSB7XG4gICAgdmFyIExheW91dEdyYXZpdHlGbGFnc0VudW07XG4gICAgKGZ1bmN0aW9uIChMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtKSB7XG4gICAgICAgIExheW91dEdyYXZpdHlGbGFnc0VudW1bTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtcInRvcFwiXSA9IDBdID0gXCJ0b3BcIjtcbiAgICAgICAgTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW1wiYm90dG9tXCJdID0gMV0gPSBcImJvdHRvbVwiO1xuICAgICAgICBMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW0xheW91dEdyYXZpdHlGbGFnc0VudW1bXCJsZWZ0XCJdID0gMl0gPSBcImxlZnRcIjtcbiAgICAgICAgTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW1wicmlnaHRcIl0gPSAzXSA9IFwicmlnaHRcIjtcbiAgICAgICAgTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW1wiY2VudGVyX3ZlcnRpY2FsXCJdID0gNF0gPSBcImNlbnRlcl92ZXJ0aWNhbFwiO1xuICAgICAgICBMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW0xheW91dEdyYXZpdHlGbGFnc0VudW1bXCJmaWxsX3ZlcnRpY2FsXCJdID0gNV0gPSBcImZpbGxfdmVydGljYWxcIjtcbiAgICAgICAgTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW1wiY2VudGVyX2hvcml6b250YWxcIl0gPSA2XSA9IFwiY2VudGVyX2hvcml6b250YWxcIjtcbiAgICAgICAgTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW1wiZmlsbF9ob3Jpem9udGFsXCJdID0gN10gPSBcImZpbGxfaG9yaXpvbnRhbFwiO1xuICAgICAgICBMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW0xheW91dEdyYXZpdHlGbGFnc0VudW1bXCJjZW50ZXJcIl0gPSA4XSA9IFwiY2VudGVyXCI7XG4gICAgICAgIExheW91dEdyYXZpdHlGbGFnc0VudW1bTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtcImZpbGxcIl0gPSA5XSA9IFwiZmlsbFwiO1xuICAgICAgICBMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW0xheW91dEdyYXZpdHlGbGFnc0VudW1bXCJjbGlwX3ZlcnRpY2FsXCJdID0gMTBdID0gXCJjbGlwX3ZlcnRpY2FsXCI7XG4gICAgICAgIExheW91dEdyYXZpdHlGbGFnc0VudW1bTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtcImNsaXBfaG9yaXpvbnRhbFwiXSA9IDExXSA9IFwiY2xpcF9ob3Jpem9udGFsXCI7XG4gICAgICAgIExheW91dEdyYXZpdHlGbGFnc0VudW1bTGF5b3V0R3Jhdml0eUZsYWdzRW51bVtcInN0YXJ0XCJdID0gMTJdID0gXCJzdGFydFwiO1xuICAgICAgICBMYXlvdXRHcmF2aXR5RmxhZ3NFbnVtW0xheW91dEdyYXZpdHlGbGFnc0VudW1bXCJlbmRcIl0gPSAxM10gPSBcImVuZFwiO1xuICAgIH0pKExheW91dEdyYXZpdHlGbGFnc0VudW0gPSBEcmF3ZXJsYXlvdXRUeXBlcy5MYXlvdXRHcmF2aXR5RmxhZ3NFbnVtIHx8IChEcmF3ZXJsYXlvdXRUeXBlcy5MYXlvdXRHcmF2aXR5RmxhZ3NFbnVtID0ge30pKTtcbn0pKERyYXdlcmxheW91dFR5cGVzID0gZXhwb3J0cy5EcmF3ZXJsYXlvdXRUeXBlcyB8fCAoZXhwb3J0cy5EcmF3ZXJsYXlvdXRUeXBlcyA9IHt9KSk7XG4vLyBlbGVtZW50c1xuZXhwb3J0cy5EcmF3ZXJMYXlvdXQgPSBmdW5jdGlvbiAoYXR0cmlidXRlcywgY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gZWxlbWVudF8xLmVsZW1lbnQoJ2RyYXdlckxheW91dCcsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmF3ZXJsYXlvdXQuanMubWFwIl19