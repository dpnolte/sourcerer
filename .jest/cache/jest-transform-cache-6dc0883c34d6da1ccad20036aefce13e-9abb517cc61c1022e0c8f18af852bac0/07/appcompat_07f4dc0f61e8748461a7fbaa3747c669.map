{"file":"/Users/derk/jsProjects/sourcerer/js/appcompat.ts","mappings":"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","names":[],"sources":["/Users/derk/jsProjects/sourcerer/js/appcompat.ts"],"sourcesContent":["import { ElementNode, element } from './element';\nimport { LayoutParamAttributes } from './layoutparams';\nimport { MainTypes } from \"./main\";\n// types\n/* generated @ 2018-11-12T14:24:43.186 */\nexport namespace AppcompatTypes {\n  export interface ActionMenuViewAttributes extends LinearLayoutCompatAttributes {\n  }\n  export interface ActionMenuViewLayoutParamsAttributes extends LinearLayoutCompatLayoutParamsAttributes {\n  }\n  export interface AppCompatAutoCompleteTextViewAttributes extends MainTypes.AutoCompleteTextViewAttributes {\n    popupBackground?: number;\n  }\n  export interface AppCompatButtonAttributes extends MainTypes.ButtonAttributes {\n  }\n  export interface AppCompatCheckBoxAttributes extends MainTypes.CheckBoxAttributes {\n  }\n  export interface AppCompatCheckedTextViewAttributes extends MainTypes.CheckedTextViewAttributes {\n  }\n  export interface AppCompatEditTextAttributes extends MainTypes.EditTextAttributes {\n  }\n  export interface AppCompatImageButtonAttributes extends MainTypes.ImageButtonAttributes {\n  }\n  export interface AppCompatImageViewAttributes extends MainTypes.ImageViewAttributes {\n  }\n  export interface AppCompatMultiAutoCompleteTextViewAttributes extends MainTypes.MultiAutoCompleteTextViewAttributes {\n    popupBackground?: number;\n  }\n  export interface AppCompatRadioButtonAttributes extends MainTypes.RadioButtonAttributes {\n  }\n  export interface AppCompatRatingBarAttributes extends MainTypes.RatingBarAttributes {\n  }\n  export interface AppCompatSeekBarAttributes extends MainTypes.SeekBarAttributes {\n  }\n  export interface AppCompatSpinnerAttributes extends MainTypes.SpinnerAttributes {\n    Spinner_android_dropDownWidth?: number;\n  }\n  export interface AppCompatTextViewAttributes extends MainTypes.TextViewAttributes {\n  }\n  export interface LinearLayoutCompatAttributes extends MainTypes.ViewGroupAttributes {\n    android_baselineAligned?: boolean;\n    android_baselineAlignedChildIndex?: number;\n    android_gravity?: number;\n    android_orientation?: number;\n    divider?: number;\n    dividerPadding?: string;\n    measureWithLargestChild?: boolean;\n    showDividers?: ShowDividersFlagsEnum[];\n  }\n  export interface LinearLayoutCompatLayoutParamsAttributes extends MainTypes.ViewGroupMarginLayoutParamsAttributes {\n    android_layout_gravity?: number;\n    android_layout_weight?: number;\n  }\n  export interface SearchViewAttributes extends LinearLayoutCompatAttributes {\n    android_focusable?: boolean;\n    android_imeOptions?: number;\n    android_inputType?: number;\n    android_maxWidth?: string;\n    iconifiedByDefault?: boolean;\n    queryHint?: string;\n  }\n  export enum ShowDividersFlagsEnum {\n    beginning = 'beginning',\n    end = 'end',\n    middle = 'middle',\n    none = 'none'\n  }\n  export interface SwitchCompatAttributes extends MainTypes.CompoundButtonAttributes {\n    android_textOff?: string;\n    android_textOn?: string;\n    android_thumb?: number;\n    showText?: boolean;\n    splitTrack?: boolean;\n    switchMinWidth?: string;\n    switchPadding?: string;\n    switchTextAppearance?: string;\n    thumbTextPadding?: string;\n    thumbTint?: string;\n    thumbTintMode?: ThumbTintModeEnum;\n    track?: string;\n    trackTint?: string;\n    trackTintMode?: TrackTintModeEnum;\n  }\n  export enum ThumbTintModeEnum {\n    add = 'add',\n    multiply = 'multiply',\n    screen = 'screen',\n    src_atop = 'src_atop',\n    src_in = 'src_in',\n    src_over = 'src_over'\n  }\n  export interface ToolbarAttributes extends MainTypes.ViewGroupAttributes {\n    contentInsetEnd?: string;\n    contentInsetEndWithActions?: string;\n    contentInsetLeft?: string;\n    contentInsetRight?: string;\n    contentInsetStart?: string;\n    contentInsetStartWithNavigation?: string;\n    logo?: number;\n    logoDescription?: string;\n    navigationContentDescription?: string;\n    navigationIcon?: string;\n    popupTheme?: number;\n    subtitle?: string;\n    subtitleTextColor?: string;\n    title?: string;\n    titleMarginBottom?: string;\n    titleMarginEnd?: string;\n    titleMarginStart?: string;\n    titleMarginTop?: string;\n    titleTextColor?: string;\n  }\n  export interface ToolbarLayoutParamsAttributes extends MainTypes.ViewGroupLayoutParamsAttributes {\n  }\n  export enum TrackTintModeEnum {\n    add = 'add',\n    multiply = 'multiply',\n    screen = 'screen',\n    src_atop = 'src_atop',\n    src_in = 'src_in',\n    src_over = 'src_over'\n  }\n}\n// elements\nexport const AppcompatSearchView = (\n  attributes?: AppcompatTypes.SearchViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.SearchViewAttributes, LayoutParamAttributes> => {\n  return element('appcompat.searchView', attributes, children);\n};\nexport const LinearLayoutCompat = (\n  attributes?: AppcompatTypes.LinearLayoutCompatAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.LinearLayoutCompatAttributes, LayoutParamAttributes> => {\n  return element('linearLayoutCompat', attributes, children);\n};\nexport const AppcompatToolbar = (\n  attributes?: AppcompatTypes.ToolbarAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.ToolbarAttributes, LayoutParamAttributes> => {\n  return element('appcompat.toolbar', attributes, children);\n};\nexport const AppcompatActionMenuView = (\n  attributes?: AppcompatTypes.ActionMenuViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.ActionMenuViewAttributes, LayoutParamAttributes> => {\n  return element('appcompat.actionMenuView', attributes, children);\n};\nexport const AppCompatSpinner = (\n  attributes?: AppcompatTypes.AppCompatSpinnerAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatSpinnerAttributes, LayoutParamAttributes> => {\n  return element('appCompatSpinner', attributes, children);\n};\nexport const AppCompatImageView = (\n  attributes?: AppcompatTypes.AppCompatImageViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatImageViewAttributes, LayoutParamAttributes> => {\n  return element('appCompatImageView', attributes, children);\n};\nexport const AppCompatRatingBar = (\n  attributes?: AppcompatTypes.AppCompatRatingBarAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatRatingBarAttributes, LayoutParamAttributes> => {\n  return element('appCompatRatingBar', attributes, children);\n};\nexport const AppCompatTextView = (\n  attributes?: AppcompatTypes.AppCompatTextViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatTextViewAttributes, LayoutParamAttributes> => {\n  return element('appCompatTextView', attributes, children);\n};\nexport const AppCompatSeekBar = (\n  attributes?: AppcompatTypes.AppCompatSeekBarAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatSeekBarAttributes, LayoutParamAttributes> => {\n  return element('appCompatSeekBar', attributes, children);\n};\nexport const AppCompatAutoCompleteTextView = (\n  attributes?: AppcompatTypes.AppCompatAutoCompleteTextViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatAutoCompleteTextViewAttributes, LayoutParamAttributes> => {\n  return element('appCompatAutoCompleteTextView', attributes, children);\n};\nexport const AppCompatRadioButton = (\n  attributes?: AppcompatTypes.AppCompatRadioButtonAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatRadioButtonAttributes, LayoutParamAttributes> => {\n  return element('appCompatRadioButton', attributes, children);\n};\nexport const SwitchCompat = (\n  attributes?: AppcompatTypes.SwitchCompatAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.SwitchCompatAttributes, LayoutParamAttributes> => {\n  return element('switchCompat', attributes, children);\n};\nexport const AppCompatImageButton = (\n  attributes?: AppcompatTypes.AppCompatImageButtonAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatImageButtonAttributes, LayoutParamAttributes> => {\n  return element('appCompatImageButton', attributes, children);\n};\nexport const AppCompatEditText = (\n  attributes?: AppcompatTypes.AppCompatEditTextAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatEditTextAttributes, LayoutParamAttributes> => {\n  return element('appCompatEditText', attributes, children);\n};\nexport const AppCompatButton = (\n  attributes?: AppcompatTypes.AppCompatButtonAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatButtonAttributes, LayoutParamAttributes> => {\n  return element('appCompatButton', attributes, children);\n};\nexport const AppCompatCheckedTextView = (\n  attributes?: AppcompatTypes.AppCompatCheckedTextViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatCheckedTextViewAttributes, LayoutParamAttributes> => {\n  return element('appCompatCheckedTextView', attributes, children);\n};\nexport const AppCompatMultiAutoCompleteTextView = (\n  attributes?: AppcompatTypes.AppCompatMultiAutoCompleteTextViewAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatMultiAutoCompleteTextViewAttributes, LayoutParamAttributes> => {\n  return element('appCompatMultiAutoCompleteTextView', attributes, children);\n};\nexport const AppCompatCheckBox = (\n  attributes?: AppcompatTypes.AppCompatCheckBoxAttributes & LayoutParamAttributes,\n  children?: Array<ElementNode<unknown, LayoutParamAttributes>>\n): ElementNode<AppcompatTypes.AppCompatCheckBoxAttributes, LayoutParamAttributes> => {\n  return element('appCompatCheckBox', attributes, children);\n};"],"version":3}